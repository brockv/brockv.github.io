@model Homework6.Models.ViewModels.MyViewModel

@{
    /**/

    /**/

    ViewBag.Title = "View Details";
}

<div style="margin-bottom: 50px;">
    <h1><strong>Client Details</strong></h1>
</div>




<!-- Display information belonging to this person -->
<div class="row" style="border: 2px solid #ffffff; margin-bottom: 20px;">
    <h2 style="margin-left: 30px;"><strong>@Html.DisplayFor(model => model.MyViewModelPerson.FullName)</strong></h2>
    <hr />
    <div class="column">
        <dl class="dl-horizontal" style="margin-left: 20px;">
            <dt>
                @Html.DisplayNameFor(model => model.MyViewModelPerson.PreferredName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MyViewModelPerson.PreferredName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MyViewModelPerson.PhoneNumber)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MyViewModelPerson.PhoneNumber)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MyViewModelPerson.FaxNumber)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MyViewModelPerson.FaxNumber)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MyViewModelPerson.EmailAddress)
            </dt>

            <dd>
                <a href="mailto:@(Model.MyViewModelPerson.EmailAddress)">@(Model.MyViewModelPerson.EmailAddress)</a>
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MyViewModelPerson.ValidFrom)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MyViewModelPerson.ValidFrom)
            </dd>

        </dl>

    </div>

    <!-- Display the photo for this entry -->
    <div class="column">
        <img src="https://via.placeholder.com/300" style="margin-bottom: 20px; width: 300px; height: 300px;" />
    </div>
</div>

@if (@ViewBag.ShowExtraStuff)
{
    <div class="row" style="border: 2px solid #ffffff; margin-bottom: 20px;">
        <h2 style="margin-left: 30px;"><strong>Company Profile</strong></h2>
        <hr />
        <div class="column">
            <dl class="dl-horizontal" style="margin-left: 20px;">
                <dt>
                    @Html.DisplayNameFor(model => model.MyViewModelCustomer.CustomerName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MyViewModelCustomer.CustomerName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MyViewModelCustomer.PhoneNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MyViewModelCustomer.PhoneNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MyViewModelCustomer.FaxNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MyViewModelCustomer.FaxNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MyViewModelCustomer.WebsiteURL)
                </dt>

                <dd>
                    <a href="@(Model.MyViewModelCustomer.WebsiteURL)">@Model.MyViewModelCustomer.WebsiteURL</a>
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.MyViewModelCustomer.ValidFrom)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MyViewModelCustomer.ValidFrom)
                </dd>

            </dl>

        </div>

        <!-- Display a map of the companies location -->
        <div class="column">
            <div id="map" style="margin-bottom: 20px; width: 300px; height: 300px;"></div>
            <script>
                var map;
                var locationLat = @Model.MyViewModelCustomer.DeliveryLocation.Latitude.Value;
                var locationLng = @Model.MyViewModelCustomer.DeliveryLocation.Longitude.Value;
                var LatLng = new google.maps.LatLng(locationLat, locationLng);
                function initMap() {
                    map = new google.maps.Map(document.getElementById("map"), {
                        center: { lat: locationLat, lng: locationLng},
                        zoom: 12
                    });

                    var marker = new google.maps.Marker({
                        position: { lat: locationLat, lng: locationLng },
                        title: "@(Model.MyViewModelCustomer.CustomerName)"
                    });
                    marker.setMap(map);

                    var contentString = '<div id="content" style="text-align: center; color: #000000">'+
                        '<label id="firstHeading" class="firstHeading">@(Model.MyViewModelCustomer.CustomerName)</label>'+
                        '<div id="bodyContent">' +
                        '<p>@(Model.MyViewModelCustomer.City.CityName), @(Model.MyViewModelCustomer.City.StateProvince.StateProvinceCode)</p>' +
                        '</div>';
                    var getInfoWindow = new google.maps.InfoWindow({ content: contentString });
                    getInfoWindow.open(map, marker);
                }

            </script>
        </div>

    </div>



    <div class="row" style="border: 2px solid #ffffff; margin-bottom: 20px;">
        <h2 style="margin-left: 30px;"><strong>Purchase History Summary</strong></h2>
        <hr />
        <div class="column">
            <dl class="dl-horizontal">
                <dt>
                    @Html.Label("Orders:")
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.MyViewModelCustomer.Orders.Count)
                </dd>

                <dt>
                    @Html.Label("Gross Sales:")
                </dt>

                <dd>
                    @string.Format("{0:C}", @ViewBag.GrossSales)
                </dd>

                <dt>
                    @Html.Label("Gross Profits:")
                </dt>

                <dd>
                    @string.Format("{0:C}", @ViewBag.GrossProfits)
                </dd>

            </dl>

        </div>

    </div>

    <div class="row" style="border: 2px solid #ffffff; margin-bottom: 20px;">
        <h2 style="margin-left: 30px;"><strong>Items Purchased</strong> (10 Highest by Profit)</h2>
        <!-- Table headers -->
        <table class="table itemsPurchased">
            <tr>
                <th>
                    @Html.Label("Stock Item ID")
                </th>

                <th>
                    @Html.Label("Description")
                </th>

                <th>
                    @Html.Label("Line Profit")
                </th>

                <th>
                    @Html.Label("Sales Person")
                </th>
            </tr>

            <!-- Table rows -->
            @foreach (var item in Model.MyViewModelInvoice)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StockItemID)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>

                    <td>
                        @(string.Format("{0:C}", item.LineProfit))
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Invoice.Person4.FullName)
                    </td>
                </tr>
            }

        </table>
    </div>
}

<!-- Load the API for the map -->
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBj2P8Nsc66e2ipctx8BWeb4CdsbQc7-Fs&callback=initMap" type="text/javascript"></script>

